---

- name: Remove existing keystore settings
  command:
    /usr/share/kibana/bin/kibana-keystore remove --allow-root "{{ item }}"
  register: result
  become_user: "{{ kibana_user }}"
  failed_when:
    - result is failed
    - result.stderr is not search('does not exist in the keystore')
  when: kibana_update_passwords | bool
  loop:
    - elasticsearch.username
    - elasticsearch.password
    - elasticsearch.ssl.keyPassphrase

- name: List keystore settings
  command: /usr/share/kibana/bin/kibana-keystore --allow-root list
  register: _kibana_keystore_settings
  changed_when: false
  become_user: "{{ kibana_user }}"

- name: Add certificate password to kibana keystore
  shell: |
    set -o pipefail;
    echo '{{ kibana_elastic_certificates_passphrase }}' |
    /usr/share/kibana/bin/kibana-keystore --allow-root add \
      {{ item }} --stdin
  args:
    executable: /bin/bash
  become_user: "{{ kibana_user }}"
  when: _kibana_keystore_settings.stdout is not search(item)
  loop:
    - elasticsearch.ssl.keyPassphrase
  notify: kibana restart service
  no_log: >-
    {{
      lookup('env', 'IN_MOLECULE')
      | default(false, true)
      | ternary(false, true)
    }}

- name: Add built-in kibana user name to kibana keystore
  shell: |
    set -o pipefail;
    echo '{{ kibana_elasticsearch_user['name'] }}' |
    /usr/share/kibana/bin/kibana-keystore --allow-root add \
      '{{ item }}' --stdin
  args:
    executable: /bin/bash
  become_user: "{{ kibana_user }}"
  when:
    - kibana_elasticsearch_user['name'] is defined
    - _kibana_keystore_settings.stdout is not search(item)
  loop:
    - elasticsearch.username
  notify: kibana restart service
  no_log: >-
    {{
      lookup('env', 'IN_MOLECULE')
      | default(false, true)
      | ternary(false, true)
    }}

- name: Add built-in kibana user password to kibana keystore
  shell: |
    set -o pipefail;
    echo '{{ kibana_elasticsearch_user['password'] }}' |
    /usr/share/kibana/bin/kibana-keystore --allow-root add \
      '{{ item }}' --stdin
  args:
    executable: /bin/bash
  become_user: "{{ kibana_user }}"
  when:
    - kibana_elasticsearch_user['password'] is defined
    - _kibana_keystore_settings.stdout is not search(item)
  loop:
    - elasticsearch.password
  notify: kibana restart service
  no_log: >-
    {{
      lookup('env', 'IN_MOLECULE')
      | default(false, true)
      | ternary(false, true)
    }}
